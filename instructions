https://www.youtube.com/watch?v=P-KxID-aGWc

creamos las carpetas client y server. 

vamos dentro de server e iniciamos node   npm init --yes y con eso se nos crea package.json 

creamos index.js y readme.md 

instalamos express para gestionar las rutas. 

e instalamos nodemon tmb.

vamos ahora a crear variables de entorno (en caso de que sea development o production)
para esto, usamos una libreria: npm install dotenv 
creamos también un fichero llamado .env, donde creamos nuestras variable, por ejemplo. PORT=3000 
y lo usamos en index.js con process.env.PORT 
process es como la applicación. usamos la palabra process para decir que vamos a usar variables de entorno. 

para poder generar las variables de entorno, tmb necesitamos en el middleware poner: 
// 2 Middlewares
require("dotenv").config()
así es como instanciamos que existe dotenv 


Vamos ahora a copiar nuestro Secret Key y llevarlo a .env 

Requerimos stripe 
Instalamos npm install stripe 

podemos darle un console.log a ver que sale: 


const stripe = require('stripe')(process.env.STRIPE_KEY);

app.get("/", (req, res) => {
    console.log(stripe);
    res.send("Hola mundo")
})

y nos salen todos los metodos de stripe que se han instalado. 

Vamos a Stripe a crear un producto. Vamos a Products -> Add New. 
Creamos una pluma (un boli) y la creamos con 2 precios, 9 y 15€. 
Copiamos el ID del precio 9, y lo pasamos en index.js: 
        const productId = "price_1KkXzpAM8E9TFlUQRhFUu3Se";
Ahora vamos a iniciar una sesión. 

creamos todo esto: 

app.get("/", async (req, res) => {
    console.log(stripe);

        //1. Establecer los IDs de los precios de STRIPE. 
        const productId = "price_1KkXzpAM8E9TFlUQRhFUu3Se";

        //2. Generar una sesión. Esto es un momento en el cual stripe ya sabe que el usuario quiere comprar. 
        // por lo tanto emite la información requerida para la compra.
        // entre esa información está la URL de compra. 

        const session = await stripe.checkout.sessions.create({
            // el primer dato que tengo que mandar es la linea de producto
            line_items: [
                {
                    price: productId,
                    quantity: 1
                }
            ],
            payment_method_types: [
                "card",
                "oxxo"
            ],
            mode: "payment", //3. este es el tipo de pago
            success_url: `http://localhost:3000/success`,
            cancel_url: `http://localhost:3000?cancelled=true`
        })

            console.log(session);


y lo probamos a ver que tal y sale error. Dice que el API Key it's not provided pero eso es 
porque dotEnv se llama despues de const stripe = require('stripe')(process.env.STRIPE_KEY);

52:11

Ahora funciona y recibimos un link en la consola. Ese link lleva a la pagina. 
si le meto el credit card de prueba, hago un pago y me dice cannot get/success porque la ruta esa no esta creada todavia.
me ha llevado a http://localhost:3000/success 

y si le doy a back me lleva a: http://localhost:3000/?cancelled=true

como esto es un backend, lo que vamos a hacer es dejar de loguear la session y vamos a camabiar en console.log 
por res.json 

    res.json({
                stripe_info: session
            })

pero para esto, necesito decirle a traves de un middleware que voy a usar json. 
app.use(express.json({extended: true}));


y tambien instalo cors, npm install cors
permite manejo de recursos entre servidores o instancias. 
const cors = require("cors");
app.use(cors());

y ahora si vamos a localhost 3000, si recibimos el json entero: 

{
stripe_info: {
id: "cs_test_a1FeTyFEEHY0S7IlbCAAyFNi1LwQFTFykSpyybFZeSntYUt0vGWdVXeJ57",
object: "checkout.session",
after_expiration: null,
allow_promotion_codes: null,
amount_subtotal: 900,
amount_total: 900,
automatic_tax: {
enabled: false,
status: null
},
billing_address_collection: null,
cancel_url: "http://localhost:3000?cancelled=true",
client_reference_id: null,
consent: null,
consent_collection: null,
currency: "eur",
customer: null,
customer_creation: "always",
customer_details: null,
customer_email: null,
expires_at: 1649108641,
livemode: false,
locale: null,
metadata: { },
mode: "payment",
payment_intent: "pi_3KkbDKAM8E9TFlUQ120Jpv4z",
payment_link: null,
payment_method_options: { },
payment_method_types: [
"card"
],
payment_status: "unpaid",
phone_number_collection: {
enabled: false
},
recovered_from: null,
setup_intent: null,
shipping: null,
shipping_address_collection: null,
shipping_options: [ ],
shipping_rate: null,
status: "open",
submit_type: null,
subscription: null,
success_url: "http://localhost:3000/success",
total_details: {
amount_discount: 0,
amount_shipping: 0,
amount_tax: 0
},
url: "https://checkout.stripe.com/pay/cs_test_a1FeTyFEEHY0S7IlbCAAyFNi1LwQFTFykSpyybFZeSntYUt0vGWdVXeJ57#fidkdWxOYHwnPyd1blpxYHZxWjA0TmNVNTBESD1APFFDaVBUXDRQc1FfS1VuS0ZJd09fazZgbWNmcVNrTEhjN0poXEhOTjVvaHNrVXZXVUdPTXV8a1N2R0BIXTxVSmttT289dEZjdF1Rd09UNTU8dnNyTUFgVScpJ2N3amhWYHdzYHcnP3F3cGApJ2lkfGpwcVF8dWAnPyd2bGtiaWBabHFgaCcpJ2BrZGdpYFVpZGZgbWppYWB3dic%2FcXdwYHgl"
}




ahora vamos a deploy el servidor asi que vamos a crear una cuenta en heroku 
le doy create new app 
lo llamo lazar-stripe 

para subir el codigo a heroku, vamos a hacerlo a traves de github. 
Creo un nuevo repository lazar-stripe en git 

copio la url esta: 
https://github.com/lazaralin990/lazar-stripe.git

y antes de conectarlo a traves de la consola, creo un fichero gitignore 

en .gitignore le pongo: 
.env
node_modules/

vamos ahora en la consola a inicir el repo con git init 

y despues: 
git remote add origin https://github.com/lazaralin990/lazar-stripe.git
luego le doy git add .
y git commit -m "base"

luego git push origin master y subo todo. 

ahora vamos a heroku a linkear la conexión con github 

he conectado el repo lazar-stripe 

he heroku tenemos que configurar las variable de entorno ahora asi que vamos a settings 
y allí tenemos Reveal Config Vars 
y le metemos el STRIPE_KEY 
no hace falta el PORT porque ya le asigna Heroku uno. 

despues de eso vamos a la opción deploy y ya configuramos el automatic deploy y le damos un nuevo deploy. 

arreglamos un par de bugs con stripe y al final va. el url que genera heroku es: 
https://lazar-stripe.herokuapp.com

la applicación esta deployed en heroku, en el servidor. Cada vez que se abre el link, un nuevo url se genera. 
Hay que entener ahora como usar esta parte.
